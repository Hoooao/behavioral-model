{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : []
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "hdr_t",
      "id" : 2,
      "fields" : [
        ["in_", 8, false],
        ["hash_val", 8, false],
        ["f1", 8, false],
        ["f2", 8, false],
        ["f3", 8, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "hdr",
      "id" : 2,
      "header_type" : "hdr_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "hdr"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "./ingress_round_robin_test.p4",
        "line" : 50,
        "column" : 8,
        "source_fragment" : "deparser"
      },
      "order" : ["hdr"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [],
  "calculations" : [],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "foo1",
      "id" : 1,
      "runtime_data" : [
        {
          "name" : "val",
          "bitwidth" : 8
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["hdr", "f1"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "./ingress_round_robin_test.p4",
            "line" : 60,
            "column" : 8,
            "source_fragment" : "h.hdr.f1 = val"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "./ingress_round_robin_test.p4",
            "line" : 61,
            "column" : 8,
            "source_fragment" : "stdmeta.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "foo2",
      "id" : 2,
      "runtime_data" : [
        {
          "name" : "val",
          "bitwidth" : 8
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["hdr", "f2"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "./ingress_round_robin_test.p4",
            "line" : 65,
            "column" : 8,
            "source_fragment" : "h.hdr.f2 = val"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "./ingress_round_robin_test.p4",
            "line" : 66,
            "column" : 8,
            "source_fragment" : "stdmeta.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "foo3",
      "id" : 3,
      "runtime_data" : [
        {
          "name" : "val",
          "bitwidth" : 8
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["hdr", "f3"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "./ingress_round_robin_test.p4",
            "line" : 70,
            "column" : 8,
            "source_fragment" : "h.hdr.f3 = val"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "./ingress_round_robin_test.p4",
            "line" : 71,
            "column" : 8,
            "source_fragment" : "stdmeta.egress_spec = port"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "./ingress_round_robin_test.p4",
        "line" : 54,
        "column" : 8,
        "source_fragment" : "ingress"
      },
      "init_table" : "selector_tbl",
      "tables" : [
        {
          "name" : "selector_tbl",
          "id" : 0,
          "source_info" : {
            "filename" : "./ingress_round_robin_test.p4",
            "line" : 74,
            "column" : 10,
            "source_fragment" : "selector_tbl"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "h.hdr.in_",
              "target" : ["hdr", "in_"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "indirect_ws",
          "action_profile" : "rr_selector",
          "max_size" : 16,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [1, 2, 3, 0],
          "actions" : ["foo1", "foo2", "foo3", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "foo1" : null,
            "foo2" : null,
            "foo3" : null,
            "NoAction" : null
          }
        }
      ],
      "action_profiles" : [
        {
          "name" : "rr_selector",
          "id" : 0,
          "source_info" : {
            "filename" : "./ingress_round_robin_test.p4",
            "line" : 86,
            "column" : 12,
            "source_fragment" : "action_selector(HashAlgorithm.selector_fanout, 16, 4)"
          },
          "selector" : {
            "algo" : "selector_fanout",
            "input" : [
              {
                "type" : "field",
                "value" : ["hdr", "hash_val"]
              }
            ]
          },
          "max_size" : 16
        }
      ],
      "conditionals" : []
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "./ingress_round_robin_test.p4",
        "line" : 46,
        "column" : 8,
        "source_fragment" : "egress"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "./ingress_round_robin_test.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}